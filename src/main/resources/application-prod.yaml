spring:
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: user:email,read:user
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            provider: github
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            scope: profile,email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            provider: google
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USER}
    url: ${DATABASE_URL}
    password: ${DATABASE_PASS}
  jpa:
    properties:
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        format_sql: 'true'
      database: postgresql
    hibernate:
      ddl-auto: update
    show-sql: 'false'

security:
  urls:
    allowed-origins: ${ALLOWED_ORIGINS}
    default-error: ${DEFAULT_ERROR_REDIRECT_URL}
    default-success: ${DEFAULT_SUCCESS_REDIRECT_URL}

application:
  system-users: ${SYSTEM_USERS}